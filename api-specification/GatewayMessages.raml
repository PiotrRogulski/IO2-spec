#%RAML 1.0
title: Groceries delivery app - Gateway
version: v1
baseUri: https://mini-delivery.com/
traits:
  paginated:
      queryParameters:
        page:
          description: page
          required: false
          type: integer
          format: int32
        pageSize:
          description: pageSize
          required: false
          type: integer
          format: int32    
      responses:
        200:
          headers:
            x-total-pages:  
securitySchemes:
    oauth_2_0:
        description: |
            OAuth 2.0 for authenticating API requests.
        type: OAuth 2.0
        describedBy:
            headers:
                Authorization:
                    description: |
                        Used to send a valid OAuth 2 access token. Do not use 
                        with the "access_token" query string parameter.
                    type: string
            queryParameters:
                access_token:
                    description: |
                        Used to send a valid OAuth 2 access token. Do not use together with 
                        the "Authorization" header
                    type: string
            responses:
                401:
                    description: |
                        Bad or expired token. This can happen if the user or Identity Provider
                        revoked or expired an access token. To fix, you should re-
                        authenticate the user.
                403:
                    description: |
                        Bad OAuth request (wrong consumer key, bad nonce, expired
                        timestamp...). Re-authenticating the user won't help here.
        settings:
            authorizationUri: https://example-identity-provider.com/oauth2/authorize
            accessTokenUri: https://example-identity-provider.com/oauth2/token
            authorizationGrants: [ authorization_code ]
types:
    UUID:
        type: string
        description: UUID
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
    OrderItem:
        description: element of an order
        type: object
        properties:
            orderItemId: UUID
            grossPrice:
                type: number
                description: the final sales price per unit of an item
            currency:
                type: string
                pattern: ^[A-Z]{3}$
            productName: string
            quantity: number
        example:
            orderItemId: ca543631-3df7-4d06-8091-179df67c8460
            grossPrice: 12
            currency: PLN
            productName: bread
            quantity: 3
    OrderStatus:
        type: object
        description: Order Status
        properties:
            orderStatus:
                type: string
                enum: [Pending, InPreparation, ReadyForDelivery, PickedUpByCourier, RejectedByShop, RejectedByCustomer, Delivered]
    Order:
        description: Groceries products order
        type: object
        properties:
            orderId: UUID
            orderItems: OrderItem[]
            creationDate: datetime
            deliveryDate: datetime
            clientAddress:
                type: object
                properties:
                    street: string
                    city: string
                    zipCode: string
            additionalInfo: string
            orderStatus: OrderStatus
            confirmedPayment: boolean
        example:
            orderId: c2cf4e9e-0393-4189-af47-0aab382ce330
            orderItems: [
            {
                orderItemId: ca543631-3df7-4d06-8091-179df67c8460,
                grossPrice: 12,
                currency: PLN,
                productName: bread,
                quantity: 3
            }]
            creationDate: 2021-12-01T12:30:22.52Z
            deliveryDate: 2021-12-01T13:30:22.52Z
            clientAddress:
                street: Prosta 12
                city: Warszawa
                zipCode: 00-631
            additionalInfo: Info from the client
            orderStatus: Pending
            confirmedPayment: false
    Client:
        description: Client
        type: object
        properties:
            userId: UUID
            phoneNumber:
                type: string
                pattern: ^[0-9]{9}$
            clientAddress:
                type: object
                properties:
                    street: string
                    city: string
                    zipCode: string
        example:
            userId: 2bcd5428-7bb2-11ec-90d6-0242ac120003
            phoneNumber: "123456789"
            clientAddress:
                street: Prosta 12
                city: Warszawa
                zipCode: 00-631
    ComplaintStatus:
        type: string
        enum: [Pending, Accepted, Rejected]
    Complaint:
        description: Complaint
        type: object
        properties:
            complaintId: UUID
            orderId: UUID
            status: ComplaintStatus
            text: string
        example:
            complaintId: 061ac70b-e370-40ca-a12e-9ea146ae9429
            orderId: e41d4a1b-e771-4eae-84c8-c598ee60d627
            status: Rejected
            text: Delivery was 5 minutes late
    Product:
        description: Product
        type: object
        properties:
			productId: UUID
            name: string
            category: string
            price: number
            quantity:
                type: number
                description: Available quantity. Will always be integral.

/orders:
    /:
        get:
            securedBy: [ oauth_2_0 ]
            description: Get all current orders
            responses:
                200:
                    description: Successfully got current orders
                    body:
                        application/json:
                            type: Order
                404:
                    description: Failed to get current orders
                    body:
                        text/plain:
                            type: string
    /history:
        get:
            securedBy: [ oauth_2_0 ]
            description: Get orders history
            responses:
                200:
                    description: Successfully got orders history
                    body:
                        application/json:
                            type: Order
                404:
                    description: Failed to get orders history
                    body:
                        text/plain:
                            type: string
    /create:
        post:
            securedBy: [ oauth_2_0 ]
            description: Add clients order to database
            body:
                application/json:
                    type: Order
            responses:
                201:
                    description: Successfully created order
                    body:
                        application/json:
                            type: Order
                404:
                    description: Failed to create order
                    body:
                        text/plain:
                            type: string
    /pending:
        /{shopId}:
            get:
                securedBy: [ oauth_2_0 ]
                description: Get pending orders assigned to shop
                responses:
                    200:
                        description: Successfully got pending orders
                        body:
                            application/json:
                                type: Order[]
                    404:
                        description: Failed to get pending orders
                        body:
                            text/plain:
                                type: string
    /{orderId}:
        get:
            securedBy: [ oauth_2_0 ]
            description: Get chosen order
            responses:
                200:
                    description: Successfully got chosen order
                    body:
                        application/json:
                            type: Order
                404:
                    description: Failed to get this order
                    body:
                        text/plain:
                            type: string
        put:
            securedBy: [ oauth_2_0 ]
            description: Set order status
            body:
                application/json:
                    type: OrderStatus
            responses:
                200:
                    description: Successfully set order status
                    body:
                        text/plain:
                            type: string
                404:
                    description: Order doesn't exist
                    body:
                        text/plain:
                            type: string
        /payment:
            put:
                securedBy: [ oauth_2_0 ]
                description: |
                    Update payment status.
                body:
                    application/json:
                        type: boolean
                responses:
                    200:
                        description: Successfully updated the payment state.
                        body:
                            application/json:
                                type: boolean
                    404:
                        description: Failed to update the payment state.
                        body:
                            text/plain:
                                type: string

/complaints:
    /create:
        post:
            securedBy: [ oauth_2_0 ]
            description: Add clients complaint to database
            body:
                application/json:
                    type: Complaint
            responses:
                201:
                    description: Successfully made a complaint
                    body:
                        application/json:
                            type: Complaint
                404:
                    description: Failed to make a complaint
                    body:
                        text/plain:
                            type: string
    /pending:
        /{shopId}:
            get:
                securedBy: [ oauth_2_0 ]
                description: Get pending complaints adressed to the shop
                responses:
                    200:
                        description: Successfully got pending complaints.
                        body:
                            application/json:
                                type: Complaint[]
                    404:
                        description: Failed to get pending complaints.
                        body:
                            text/plain:
                                type: string
    /{complaintId}:
        get:
            securedBy: [ oauth_2_0 ]
            description: Get chosen complaint.
            responses:
                200:
                    description: Successfully got chosen complaint.
                    body:
                        application/json:
                            type: Complaint
                404:
                    description: Failed to get this complaint.
                    body:
                        text/plain:
                            type: string
        /accept:
            put:
                securedBy: [ oauth_2_0 ]
                description: Accept complaint
                body:
                    application/json:
                        type: ComplaintStatus
                responses:
                    200:
                        description: Accepted complaint.
                        body:
                            application/json:
                                type: ComplaintStatus
                    404:
                        description: Complaint not found.
                        body:
                            text/plain:
                                type: string
        /reject:
            put:
                securedBy: [ oauth_2_0 ]
                description: Reject complaint.
                body:
                    application/json:
                        type: ComplaintStatus
                responses:
                    200:
                        description: Rejected complaint.
                        body:
                            application/json:
                                type: ComplaintStatus
                    404:
                        description: Complaint not found.
                        body:
                            text/plain:
                                type: string

/clients:
    /{clientAddress}:
        get:
            securedBy: [ oauth_2_0 ]
            description: Get details about client
            responses:
                200:
                    description: Successfully gotten clients info.
                    body:
                        application/json:
                            type: Client
                404:
                    description: Client not found.
                    body:
                        text/plain:
                            type: string

/products:
    /{productId}:
        get:
            description: Get product information
            responses:
                200:
                    description: Successfully got product info.
                    body:
                        application/json:
                            type: Product
                404:
                    description: Product not found.
                    body:
                        text/plain:
                            type: string
                   
    /category:
        /{category}:
            get:
                is: [ paginated ]
                description: Get all products in the specifies category (paginated)
                responses:
                    200:
                        description: Successfully got products info.
                        body:
                            application/json:
                                type: Product[]
                    404:
                        description: Category not found.
                        body:
                            text/plain:
                                type: string
                    
    get:
        is: [ paginated ]
        description: Get all products (paginated)
        responses:
            200:
                description: Successfully got products info.
                body:
                    application/json:
                        type: Product[]

